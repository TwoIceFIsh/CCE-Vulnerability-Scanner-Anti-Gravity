import os
import re
import zipfile

import chardet
from requests import Response


def get_file(file_path: str):
    with open(file_path, 'r') as f:
        return f.readlines()


def is_encoded(file_path: str):
    rawdata = open(file_path, mode='rb').read()
    data = chardet.detect(rawdata)
    result = data['encoding']
    return result


def to_utf8(file_path: str, encoding_in: str):
    try:
        with open(file_path, 'r', encoding=encoding_in) as f:
            datas = f.read()

        with open(file_path, 'w', encoding='utf-8') as k:
            k.write(datas)
    except:
        print('변환 실패')


def response_to_json(response: Response):
    return response.json()


def extract(application_path: str, file_name: str):
    with zipfile.ZipFile(file_name, 'r') as zip_ref:
        zip_ref.extractall(os.path.join(application_path, 'update', 'tmp'))


def get_datas(path: str):
    flag = ''
    datas = []

    with open(path, 'r', encoding='utf-8') as f:
        for i in f.readlines():
            if 'Windows IP Configuration' in i:
                flag = 'ip'
                break

    k = 0
    if flag == 'ip':
        with open(path, 'r', encoding='utf-8') as f:
            for i in f.readlines():
                if 'Host Name' in i:
                    host_name = i.strip().split(':')[1].replace(' ', '')

                    datas.append(host_name)

                if 'Ethernet adapter 이더넷' in i:
                    k = 1

                if k == 1 and 'IPv4 Address' in i:
                    eth_ip = i.strip().split(':')[1].replace(' ', '')
                    eth_ip = re.sub(r'\(.*\)', '', eth_ip)
                    datas.append(eth_ip)

                if 'Wireless LAN adapter Wi-Fi' in i:
                    k = 2

                if k == 2 and 'IPv4 Address' in i:
                    wifi_ip = i.strip().split(':')[1].replace(' ', '')
                    wifi_ip = re.sub(r'\(.*\)', '', wifi_ip)
                    datas.append(wifi_ip)
                    break
    # host name, ethernet ip, wifi ip
    return datas


def zip_file(file_path: str, file_name: str):
    with zipfile.ZipFile(file_path + f"\\{file_name}.zip", "w") as zip_file:
        for file in os.listdir(file_path):
            if file.endswith('.txt'):
                zip_file.write(os.path.join(file_path, file), compress_type=zipfile.ZIP_DEFLATED)

        return file_path + f"\\{file_name}.zip"
