package main

import (
	"io"
	"log"
	"net"
)

func main() {
	l, err := net.Listen("tcp", ":8000")
	if nil != err {
		log.Println(err)
	}
	defer l.Close()

	// ConnHandler 비동기 생성
	for {
		conn, err := l.Accept()
		if nil != err {
			log.Println(err)
			continue
		}
		defer conn.Close()
		go ConnHandler(conn)
	}
}

// 데이터를 주고 받는다.
func ConnHandler(conn net.Conn) {
	recvBuf := make([]byte, 4096)
	for {
		n, err := conn.Read(recvBuf)
		if nil != err {
			if io.EOF == err {
				log.Println(err)
				return
			}
			// 에이전트가 종료됨
			log.Println("연결이 끊어졌습니다", err)
			return
		}
		if 0 < n {
			data := recvBuf[:n]
			log.Println(string(data))
			_, err = conn.Write(data[:n])
			if err != nil {
				log.Println("연결이 끊어졌습니다.{0}", err)
				return
			}
		}
	}
}
