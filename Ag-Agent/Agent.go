package main

import (
	"fmt"
	"log"
	"net"
	"strconv"
	"time"
)

func ReadData(c net.Conn, flag *string) {
	data := make([]byte, 4096) // 4096 크기의 바이트 슬라이스 생성

	for {
		n, err := c.Read(data) // 서버에서 받은 데이터를 읽음
		if err != nil {
			fmt.Println(err)
			c.Close()
			*flag = "false"
			return
		}

		fmt.Println("echo ", string(data[:n])) // 데이터 출력

		time.Sleep(5 * time.Second)
	}
}

func WriteData(c net.Conn, flag *string) {
	i := 0
	for {
		s := "Hello " + strconv.Itoa(i)

		_, err := c.Write([]byte(s)) // 서버로 데이터를 보냄
		if err != nil {
			fmt.Println(err)
			*flag = "false"
			c.Close()
			return
		}

		i++
		time.Sleep(5 * time.Second)
	}
}

func main() {
	var flag string = "true"
	for {
		client, err := net.Dial("tcp", "127.0.0.1:8000") // TCP 프로토콜, 127.0.0.1:8000 서버에 연결
		if err != nil {
			log.Println("[!] Server Down1")
			time.Sleep(5 * time.Second)
			continue
		} else {
			log.Println("[-] Server Connected")
			go ReadData(client, &flag)
			go WriteData(client, &flag)
		}

		for {
			time.Sleep(5 * time.Second)

			if flag == "false" {
				flag = "true"
				log.Println("[!] Server Down2")
				break
			}
		}
	}
}
